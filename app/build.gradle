apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    def keyProperties = new Properties()
    keyProperties.load(new FileInputStream(rootProject.file("keystore.properties")))

    defaultConfig {
        applicationId "com.youloveevents"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'THETICKETMASTER_API_KEY', keyProperties['theTicketmasterKey']
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.androidx.appCompat"
    implementation "androidx.core:core-ktx:$versions.androidx.coreKtx"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.recyclerview:recyclerview:$versions.androidx.recyclerView"
    implementation "androidx.fragment:fragment:$versions.androidx.fragment"
    implementation "com.google.android.material:material:$versions.material"

    //Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava.core"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxjava.android"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit.core"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit.rxjava"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit.gsonConverter"

    //Gson
    implementation "com.google.code.gson:gson:$versions.gson"

    //OkHttp3
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp.core"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp.logging"

    //Threeten
    implementation "com.jakewharton.threetenabp:threetenabp:$versions.threeTen"
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    //Picasso
    implementation "com.squareup.picasso:picasso:$versions.picasso"
    implementation "org.conscrypt:conscrypt-android:$versions.conscript"

    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.mockito:mockito-inline:$versions.mockito"
    testImplementation "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin"
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "androidx.arch.core:core-testing:$versions.archTesting"

    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    // Auto-generated
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
